"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _View = _interopRequireDefault(require("./View.js"));
var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
// Parcel 2

class PaginationView extends _View.default {
  _parentElement = document.querySelector(".pagination");
  _generateMarkup() {
    const curPage = this._data.page;
    const numPages = Math.ceil(this.data.results.length / this.data.resultsPerPage);
    // page 1 med flera sidor
    if (curPage === 1 && numPages > 1) {
      return `
      <button class="btn--inline pagination__btn--next">
            <span>Page ${curPage + 1}</span>
            <svg class="search__icon">
              <use href="${_icons.default}#icon-arrow-right"></use>
            </svg>
          </button>`;
    }
    // last page
    if (curPage === numPages && numPages > 1) {
      return `<button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${curPage - 1}</span>
    </button>`;
    }
    // middle page
    if (curPage < numPages) {
      return `<button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${curPage - 1}</span>
    </button> 
    <button class="btn--inline pagination__btn--prev">
      <svg class="search__icon">
        <use href="${_icons.default}#icon-arrow-left"></use>
      </svg>
      <span>Page ${curPage - 1}</span>
    </button>`;
    }
    // page 1 med inga fler sidor
    return "";
  }
}
var _default = exports.default = new PaginationView();