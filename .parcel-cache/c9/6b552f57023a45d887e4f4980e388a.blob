"use strict";

require("core-js/modules/web.immediate.js");
var model = _interopRequireWildcard(require("./model.js"));
var _recipeView = _interopRequireDefault(require("./views/recipeView.js"));
var _searchView = _interopRequireDefault(require("./views/searchView.js"));
var _resultsView = _interopRequireDefault(require("./views/resultsView.js"));
var _paginationView = _interopRequireDefault(require("./views/paginationView.js"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
// const recipeContainer = document.querySelector(".recipe");

// https://forkify-api.herokuapp.com/v2

///////////////////////////////////////

const controlRecipes = async function () {
  try {
    const id = window.location.hash.slice(1);
    if (!id) return;
    _recipeView.default.renderSpinner();

    // 0) Update results view to mark selected search result
    _resultsView.default.update(model.getSearchResultsPage());

    // 1) Updating bookmarks view
    bookmarksView.update(model.state.bookmarks);

    // 2) Loading recipe
    await model.loadRecipe(id);

    // 3) Rendering recipe
    _recipeView.default.render(model.state.recipe);
  } catch (err) {
    _recipeView.default.renderError();
    console.error(err);
  }
};
const controlSearchResults = async function () {
  try {
    _resultsView.default.renderSpinner();

    // 1) Get search query
    const query = _searchView.default.getQuery();
    if (!query) return;

    // 2) Load search results
    await model.loadSearchResults(query);

    // 3) Render results
    _resultsView.default.render(model.getSearchResultsPage());

    // 4) Render initial pagination buttons
    _paginationView.default.render(model.state.search);
  } catch (err) {
    console.log(err);
  }
};
const controlPagination = function (goToPage) {
  // 1) Render NEW results
  _resultsView.default.render(model.getSearchResultsPage(goToPage));

  // 2) Render NEW pagination buttons
  _paginationView.default.render(model.state.search);
};
const controlServings = function (newServings) {
  // Update the recipe servings (in state)
  model.updateServings(newServings);

  // Update the recipe view
  _recipeView.default.update(model.state.recipe);
};
const init = function () {
  _recipeView.default.addHandlerRender(controlRecipes);
  _recipeView.default.addHandlerUpdateServings(controlServings);
  _searchView.default.addHandlerSearch(controlSearchResults);
  _paginationView.default.addHadlerClick(controlPagination);
  // controlServings();
};
init();